# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Dividend {
  amount: Float!
  exDate: DateTime!
  frequency: DividendFrequency!
  payDate: DateTime!
  ticker: String!
}

enum DividendFrequency {
  ANNUAL
  QUARTERLY
}

type ForecastModel {
  confidenceScore: Float!
  id: String!
  modelType: String!
  prediction: Float!
  ticker: String!
  trainedAt: DateTime!
}

type Hello {
  message: String!
}

enum Interval {
  _1d
  _1h
  _1m
  _5m
}

input LoginInput {
  email: String!
  password: String!
}

type MarketData {
  afterHours: Float
  close: Float!
  high: Float!
  id: ID!
  interval: Interval!
  low: Float!
  open: Float!
  ticker: String!
  timestamp: String!
  volume: String!
}

type Mutation {
  login(input: LoginInput!): AuthPayload!
  signUp(input: SignUpInput!): AuthPayload!
}

type News {
  headline: String!
  id: String!
  publishedAt: DateTime!
  sentimentScore: Float
  source: String
  summary: String
  ticker: String!
  type: String
  url: String
}

type Query {
  me: User!
  sayHello: Hello!
  stock(ticker: String!): Stock
  stocks: [Stock!]!
}

input SignUpInput {
  email: String!
  password: String!
}

type Stock {
  companyName: String!
  country: String
  currency: String
  dividends(limit: Float! = 12): [Dividend!]!
  exchange: String!
  forecastModels: [ForecastModel!]!
  industry: String
  insiderHolding: Float
  institutionalHolding: Float
  ipoDate: String
  marketCap: String
  marketData(interval: Interval! = _1d): [MarketData!]!
  news(limit: Float! = 20): [News!]!
  outstandingShares: String
  sector: String
  status: String
  ticker: String!
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
}